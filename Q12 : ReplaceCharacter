Problem Statement

You are given a function,

Void *ReplaceCharacter(Char str[], int n, char ch1, char ch2);

The function accepts a string  ‘ str’ of length n and two characters ‘ch1’ and ‘ch2’ as its arguments . Implement the function to modify and return the string ‘ str’ in such a way that all occurrences of ‘ch1’ in original string are replaced by ‘ch2’ and all occurrences of ‘ch2’  in original string are replaced by ‘ch1’.

Assumption: String Contains only lower-case alphabetical letters.

Note:

Return null if string is null.
If both characters are not present in string or both of them are same , then return the string unchanged.
Example:

Input:
Str: apples
ch1:a
ch2:p
Output:
paales

#include <iostream>
using namespace std;
void ReplaceCharacter(string &s,char ch1,char ch2){
   int n=s.size();
   for(int i=0;i<n;i++){
       if(s[i]==ch1){
           s[i]=ch2;
       }
       else if(s[i]==ch2){
           s[i]=ch1;
       }
   }
}
int main() {
   string s;
   char ch1,ch2;
   cin>>s;
   cin>>ch1>>ch2;
   ReplaceCharacter(s,ch1,ch2);
   cout<<s;
}
int main ()
{
    int i, n, reverse, d, f, l;
    printf ("enter the starting \n");
    scanf ("%d", &f);
    printf ("enter the ending\n");
    scanf ("%d", &l);
    for (i = f; i <= l; i++)
    {
        reverse = 0;
        n = i;
        while (n != 0)
	{
	        d = n % 10;
	        reverse = reverse * 10 + d;
	        n = n / 10;
	}
        if (i == reverse)
	        printf ("%d ", i);
    }
    return 0;
}
