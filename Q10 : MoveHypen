mplement the following functions.a

char*MoveHyphen(char str[],int n);

The function accepts a string “str” of length ‘n’, that contains alphabets and hyphens (-). Implement the function to move all hyphens(-) in the string to the front of the given string.

NOTE:- Return null if str is null.

Example :-

Input:
str.Move-Hyphens-to-Front
Output:
—MoveHyphenstoFront
Explanation:-

The string “Move-Hyphens -to-front” has 3 hyphens (-), which are moved to the front of the string, this output is “— MoveHyphen”

Sample Input

Str: String-Compare
Sample Output-
-StringCompare
//Code
#include <iostream>
using namespace std;
string hypenString(string s){
  string ans;int count=0;
  int n=s.size();
  for(int i=0;i<n;i++){
      if(s[i]!='-'){
          ans+=s[i];
      }
      else if(s[i]='-') count++;
  }
  while(count--){
      ans='-'+ans;
  }
  return ans; 
}
int main() {
   string s;
   getline(cin,s);
   cout<<hypenString(s);
}
 //another way without space complexity
#include <iostream>
using namespace std;
string hypenString(string &s){
  int n=s.size(),count=0;
  for(int i=0;i<n;i++){
     if(s[i]=='-') {count++;
      s.erase(i,1);
      }
  }
  while(count--){
      s='-'+s;
  }
  return s; 
}
int main() {
   string s;
   getline(cin,s);
   cout<<hypenString(s);
}

